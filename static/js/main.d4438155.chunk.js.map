{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","x","setX","maxIndex","length","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","newStep","currentIndex","Math","min","prevHandler","disabled","max","nextHandler","App","state","this","htmlFor","name","id","value","onChange","e","setState","Number","target","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4438155.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Prop {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean\n}\n\nconst Carousel: React.FC<Prop> = (\n  {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  },\n) => {\n  const [x, setX] = useState(0);\n  const maxIndex = -(images.length - frameSize);\n  const nextHandler = (newStep: number) => {\n    const currentIndex = Math.max(x - newStep, maxIndex);\n\n    setX(infinite && currentIndex === maxIndex\n      ? 0\n      : currentIndex);\n  };\n\n  const prevHandler = (newStep: number) => {\n    const currentIndex = Math.min(x + newStep, 0);\n\n    setX(infinite && currentIndex === 0\n      ? maxIndex\n      : currentIndex);\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${x * itemWidth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              width={itemWidth}\n              src={image}\n              alt={`${index + 1}`}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={() => prevHandler(step)}\n        disabled={!infinite && x === 0}\n      >\n        Prev\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => nextHandler(step)}\n        disabled={!infinite && x === maxIndex}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <div>\n          <label htmlFor=\"itemId\">\n            Item width:\n          </label>\n          <input\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemId\"\n            min={130}\n            max={1300}\n            step={10}\n            value={itemWidth}\n            onChange={(e) => (\n              this.setState({ itemWidth: Number(e.target.value) })\n            )}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"frameId\">\n            Number of images displayed:\n          </label>\n          <input\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameId\"\n            min={1}\n            max={10}\n            step={1}\n            value={frameSize}\n            onChange={(e) => (\n              this.setState({ frameSize: Number(e.target.value) })\n            )}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stepId\">\n            Number of images scrolled:\n          </label>\n          <input\n            type=\"number\"\n            name=\"step\"\n            id=\"stepId\"\n            min={1}\n            max={10}\n            step={1}\n            value={step}\n            onChange={(e) => (\n              this.setState({ step: Number(e.target.value) })\n            )}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"animation\">\n            Animation duration:\n          </label>\n          <input\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animation\"\n            min={100}\n            max={10000}\n            step={100}\n            value={animationDuration}\n            onChange={(e) => (\n              this.setState({ animationDuration: Number(e.target.value) })\n            )}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"infinite\">\n            Carousel cyclic:\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infinite\"\n            min={100}\n            max={10000}\n            step={100}\n            checked={infinite}\n            onChange={(e) => (\n              this.setState({ infinite: e.target.checked })\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}